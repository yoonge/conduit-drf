# Generated by Django 4.2.11 on 2024-05-14 13:57

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('avatar', models.CharField(default='/images/typescript.svg', max_length=256, verbose_name='avatar')),
                ('bio', models.TextField(default='', verbose_name='bio')),
                ('birthday', models.CharField(default='', max_length=64, verbose_name='birthday')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('email', models.EmailField(max_length=128, unique=True, verbose_name='e-mail')),
                ('gender', models.SmallIntegerField(choices=[(-1, 'Secret'), (0, 'Female'), (1, 'Male')], default=-1, verbose_name='gender')),
                ('job', models.CharField(default='', max_length=256, verbose_name='job')),
                ('nickname', models.CharField(default='', max_length=64, verbose_name='nickname')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('phone', models.CharField(default='', max_length=11, verbose_name='phone')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='update at')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='username')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('content', models.TextField(verbose_name='content')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('tag', models.CharField(max_length=128, verbose_name='tag')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('content', models.TextField(verbose_name='content')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('favorote', models.IntegerField(default=0, verbose_name='favorote')),
                ('title', models.TextField(verbose_name='title')),
                ('update_at', models.DateTimeField(auto_now=True, null=True, verbose_name='update at')),
                ('tags', models.ManyToManyField(blank=True, related_name='topic_tags', to='api.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['tag', '-create_at'], name='api_tag_tag_268f1a_idx'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.topic'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite',
            field=models.ManyToManyField(blank=True, related_name='user_favorites', to='api.topic'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['-create_at'], name='api_topic_create__521c05_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['-create_at'], name='api_comment_create__b802de_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username', '-create_at'], name='api_user_usernam_060f29_idx'),
        ),
    ]
